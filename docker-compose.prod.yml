version: "3.8"

volumes:
  redis_data:
  model_data:
  postgres_data:

networks:
  internal:
    driver: bridge
  nginx_network:
    external: true

services:

  redis:
    image: redis:7-alpine
    container_name: redis
    volumes:
      - redis_data:/data
    networks:
      - internal
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: backend
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - API_PORT=${API_PORT:-4000}
      - WS_PORT=${WS_PORT:-3010}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - NODE_ENV=production
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    volumes:
      - ./wallet:/app/wallet:ro
    networks:
      - internal
      - nginx_network
    restart: always

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile.prod
    container_name: ui
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
    networks:
      - nginx_network
    restart: always

  ai_model:
    build: 
      context: ./ai_model
      dockerfile: Dockerfile.prod
    container_name: ai_model
    volumes:
      - model_data:/app/models
    environment:
      - AI_PORT=${AI_PORT:-8000}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - WORKERS=4
    networks:
      - internal
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ocaml_engine:
    build: ./ocaml_engine
    container_name: ocaml_engine
    environment:
      - PORT=${OCAML_PORT:-8080}
    networks:
      - internal
    restart: always

  solana_agent:
    build: 
      context: ./solana_agent
      dockerfile: Dockerfile.prod
    container_name: solana_agent
    depends_on:
      - redis
      - ai_model
      - ocaml_engine
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - AI_MODEL_URL=http://ai_model:${AI_PORT:-8000}
      - EXIT_MODEL_URL=http://ai_model:${AI_PORT:-8000}/exit
      - OCAML_API_URL=http://ocaml_engine:${OCAML_PORT:-8080}/score
      - LIVE_MODE=${LIVE_MODE:-false}
      - WALLET_KEYPAIR_PATH=/app/wallet/wallet.json
      - API_BASE_URL=http://backend:${API_PORT:-4000}
      - CREATOR_WALLET=${CREATOR_WALLET}
      - SOLANA_RPC_URL=${SOLANA_RPC_URL}
      - DOCKER_CONTAINER=true
      - NODE_ENV=production
    volumes:
      - ./wallet:/app/wallet:ro
    networks:
      - internal
    restart: always

  market_watcher:
    build: 
      context: ./market_watcher
      dockerfile: Dockerfile.prod
    container_name: market_watcher
    depends_on:
      - redis
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - JUPITER_API_URL=${JUPITER_API_URL:-https://quote-api.jup.ag/v6}
      - NODE_ENV=production
    networks:
      - internal
    restart: always

  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      - ui
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - nginx_network
    restart: always